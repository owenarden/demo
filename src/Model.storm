import Data.ByteString (ByteString)
import Data.Text       (Text)

------------------------------------------------------------------------------------------
predicate follows :: UserId -> UserId -> Bool

policy IsSubscriber = \follower viewer ->
  followerSubscriber follower == entityKey viewer

policy IsPublisher = \follower viewer ->
  followerPublisher follower == entityKey viewer

policy IsPending = \follower viewer ->
  followerSubscriber follower == entityKey viewer && followerStatus follower == " pending "

policy IsOwner = \item viewer ->
  itemOwner item == entityKey viewer

policy IsPublic = \item ->
  itemLevel item == "public"

policy IsFollower = \item viewer ->
  itemLevel item == "follower" && follows (entityKey viewer) (itemOwner item)

------------------------------------------------------------------------------------------

User
  emailAddress  Text
  password      ByteString
  firstName     Text
  lastName      Text
  UniqueEmailAddress emailAddress

Item
  owner         UserId
  description   Text
  price         Int
  level         String

  read   [ description,price ] { \item viewer -> IsOwner item viewer || IsPublic item || IsFollower item viewer }
  insert @IsOwner
  update [ owner, level, description ] { \old new viewer -> IsOwner old viewer }

Follower
  subscriber    UserId
  publisher     UserId
  status        String

  assert {status == "accepted" => follows subscriber publisher}
  -- read   [publisher] { \follower viewer -> IsSubscriber follower viewer}
  insert @IsPending
  update [ status ] { \old new viewer -> IsPublisher old viewer }